@page "/routines"
@using FitnessTrackMono.Shared.Models;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using FitnessTrackMono.Client.Services.RoutineService;
@inject HttpClient Http;
@inject IRoutineService RoutineService;
@inject NavigationManager NavManager;
@inject Radzen.DialogService DialogService;

<RadzenCard>
    <RadzenText TextStyle="TextStyle.H5" class="d-inline"> Routines </RadzenText>
    <RadzenButton Click=@(args => ShowForm(null)) Icon="add" Size="Radzen.ButtonSize.Medium"
        ButtonStyle="Radzen.ButtonStyle.Primary" Class="rz-border-radius-10 rz-shadow-6" />

    <RadzenCard>
        <RadzenDataList WrapItems="false" AllowPaging="true" PageSize="5" Data="RoutineService.Routines"
            TItem="Routine">
            <Template Context="routine">
                <RadzenText class="d-inline">@routine.Name</RadzenText>
                <RadzenButton Variant="Radzen.Variant.Text" Click=@(args => ShowForm(routine.Id)) Icon="edit" ButtonS t
                    yle="Radzen.ButtonStyle.Info" Text="Edit" Size="Radzen.ButtonSize.Small" class="mb-2" />
                <RadzenButton Variant="Radzen.Variant.Text" Click=@(args => DeleteRoutine(routine.Id)) Icon="delete"
                    ButtonStyle="Radzen.ButtonStyle.Danger" Text="Delete" Size="Radzen.ButtonSize.Small" class="mb-2" />
            </Template>
        </RadzenDataList>
    </RadzenCard>

</RadzenCard>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await RoutineService.GetRoutines();
            //loading = false;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private async Task ShowForm(int? id)
    {
        var title = id == null ? "Add Routine" : "Edit Routine";
        await DialogService.OpenAsync<RoutinesForm>(title,
        new Dictionary<string, object>() { { "Id", id } },
        new Radzen.DialogOptions()
        {
            Width = "512px",
            Draggable = true,
            CloseDialogOnOverlayClick = true
        }
        );
    }

    private async Task DeleteRoutine(int id)
    {
        await RoutineService.DeleteRoutine(id);
    }
}
